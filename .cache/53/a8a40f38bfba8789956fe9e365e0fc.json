{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/variable.js","dependencies":[{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\variable.js.map","includedInParent":true,"mtime":1618542804037},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\variable.ts","includedInParent":true,"mtime":1618542804854},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\package.json","includedInParent":true,"mtime":1618542826354},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1618542804579},{"name":"../engine","loc":{"line":17,"column":23},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\variable.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\engine.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.variable = variable;\n\nvar _engine = require(\"../engine\");\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n\n/**\r\n * Creates a new variable with the provided initial value.\r\n * ```js\r\n * const x = tf.variable(tf.tensor([1, 2, 3]));\r\n * x.assign(tf.tensor([4, 5, 6]));\r\n *\r\n * x.print();\r\n * ```\r\n *\r\n * @param initialValue Initial value for the tensor.\r\n * @param trainable If true, optimizers are allowed to update it.\r\n * @param name Name of the variable. Defaults to a unique id.\r\n * @param dtype If set, initialValue will be converted to the given type.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\nfunction variable(initialValue, trainable = true, name, dtype) {\n  return _engine.ENGINE.makeVariable(initialValue, trainable, name, dtype);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/variable.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":27,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":16},"generated":{"line":43,"column":9}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":17}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":4},"generated":{"line":43,"column":18}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":30}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":29},"generated":{"line":43,"column":32}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":38},"generated":{"line":43,"column":41}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":41},"generated":{"line":43,"column":44}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":48}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":39,"column":47},"generated":{"line":43,"column":50}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":54}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":40,"column":4},"generated":{"line":43,"column":56}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":43,"column":61}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":40,"column":20},"generated":{"line":43,"column":63}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":44,"column":0}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":9}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":16},"generated":{"line":44,"column":24}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":36}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":29},"generated":{"line":44,"column":37}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":49}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":43},"generated":{"line":44,"column":51}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":60}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":54},"generated":{"line":44,"column":62}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":66}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":60},"generated":{"line":44,"column":68}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":9},"generated":{"line":44,"column":73}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":41,"column":2},"generated":{"line":44,"column":74}},{"source":"../../src/ops/variable.ts","name":null,"original":{"line":43,"column":1},"generated":{"line":45,"column":0}}],"sources":{"../../src/ops/variable.ts":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {ENGINE} from '../engine';\r\nimport {Tensor, Variable} from '../tensor';\r\nimport {DataType, Rank} from '../types';\r\n\r\n/**\r\n * Creates a new variable with the provided initial value.\r\n * ```js\r\n * const x = tf.variable(tf.tensor([1, 2, 3]));\r\n * x.assign(tf.tensor([4, 5, 6]));\r\n *\r\n * x.print();\r\n * ```\r\n *\r\n * @param initialValue Initial value for the tensor.\r\n * @param trainable If true, optimizers are allowed to update it.\r\n * @param name Name of the variable. Defaults to a unique id.\r\n * @param dtype If set, initialValue will be converted to the given type.\r\n *\r\n * @doc {heading: 'Tensors', subheading: 'Creation'}\r\n */\r\nexport function variable<R extends Rank>(\r\n    initialValue: Tensor<R>, trainable = true, name?: string,\r\n    dtype?: DataType): Variable<R> {\r\n  return ENGINE.makeVariable(initialValue, trainable, name, dtype) as\r\n      Variable<R>;\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"4686678669893988530e31c6f5fd3051","cacheData":{"env":{}}}