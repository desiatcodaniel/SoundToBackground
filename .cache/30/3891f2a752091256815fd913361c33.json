{"id":"node_modules/@tensorflow/tfjs-layers/dist/keras_format/initializer_config.js","dependencies":[{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\dist\\keras_format\\initializer_config.js.map","includedInParent":true,"mtime":1618542805237},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\src\\keras_format\\initializer_config.ts","includedInParent":true,"mtime":1618542805561},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\package.json","includedInParent":true,"mtime":1618542826354},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1618542805530}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initializerClassNames = exports.VALID_DISTRIBUTION_VALUES = exports.VALID_FAN_MODE_VALUES = void 0;\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\nconst VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg'];\nexports.VALID_FAN_MODE_VALUES = VALID_FAN_MODE_VALUES;\nconst VALID_DISTRIBUTION_VALUES = ['normal', 'uniform', 'truncatedNormal']; // We can't easily extract a string[] from the string union type, but we can\n// recapitulate the list, enforcing at compile time that the values are valid\n// and that we have the right number of them.\n\n/**\r\n * A string array of valid Initializer class names.\r\n *\r\n * This is guaranteed to match the `InitializerClassName` union type.\r\n */\n\nexports.VALID_DISTRIBUTION_VALUES = VALID_DISTRIBUTION_VALUES;\nconst initializerClassNames = ['Zeros', 'Ones', 'Constant', 'RandomNormal', 'RandomUniform', 'TruncatedNormal', 'VarianceScaling', 'Orthogonal', 'Identity'];\nexports.initializerClassNames = initializerClassNames;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":17,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":13},"generated":{"line":17,"column":6}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":34},"generated":{"line":17,"column":27}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":30}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":38},"generated":{"line":17,"column":31}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":38}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":47},"generated":{"line":17,"column":40}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":48}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":57},"generated":{"line":17,"column":50}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":17,"column":58}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":17,"column":7},"generated":{"line":17,"column":59}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":7},"generated":{"line":19,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":19,"column":6}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":38},"generated":{"line":19,"column":31}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":34}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":5},"generated":{"line":19,"column":35}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":43}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":15},"generated":{"line":19,"column":45}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":54}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":26},"generated":{"line":19,"column":56}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":19,"column":73}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":24,"column":7},"generated":{"line":19,"column":74}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":101,"column":0},"generated":{"line":19,"column":76}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":102,"column":0},"generated":{"line":20,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":103,"column":0},"generated":{"line":21,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":105,"column":0},"generated":{"line":23,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":7},"generated":{"line":30,"column":0}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":13},"generated":{"line":30,"column":6}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":34},"generated":{"line":30,"column":27}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":30}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":2},"generated":{"line":30,"column":31}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":38}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":11},"generated":{"line":30,"column":40}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":46}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":19},"generated":{"line":30,"column":48}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":58}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":31},"generated":{"line":30,"column":60}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":74}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":111,"column":47},"generated":{"line":30,"column":76}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":91}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":2},"generated":{"line":30,"column":93}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":110}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":21},"generated":{"line":30,"column":112}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":129}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":40},"generated":{"line":30,"column":131}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":143}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":112,"column":54},"generated":{"line":30,"column":145}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":61},"generated":{"line":30,"column":155}},{"source":"../../src/keras_format/initializer_config.ts","name":null,"original":{"line":110,"column":7},"generated":{"line":30,"column":156}}],"sources":{"../../src/keras_format/initializer_config.ts":"/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\r\n\r\nimport {BaseSerialization} from './types';\r\n\r\n// TODO(soergel): Move the CamelCase versions back out of keras_format\r\n// e.g. to src/common.ts.  Maybe even duplicate *all* of these to be pedantic?\r\n/** @docinline */\r\nexport type FanMode = 'fanIn'|'fanOut'|'fanAvg';\r\nexport const VALID_FAN_MODE_VALUES = ['fanIn', 'fanOut', 'fanAvg'];\r\n\r\n// These constants have a snake vs. camel distinction.\r\nexport type FanModeSerialization = 'fan_in'|'fan_out'|'fan_avg';\r\n\r\n/** @docinline */\r\nexport type Distribution = 'normal'|'uniform'|'truncatedNormal';\r\nexport const VALID_DISTRIBUTION_VALUES =\r\n    ['normal', 'uniform', 'truncatedNormal'];\r\n// These constants have a snake vs. camel distinction.\r\nexport type DistributionSerialization = 'normal'|'uniform'|'truncated_normal';\r\n\r\nexport type ZerosSerialization = BaseSerialization<'Zeros', {}>;\r\n\r\nexport type OnesSerialization = BaseSerialization<'Ones', {}>;\r\n\r\nexport type ConstantConfig = {\r\n  value: number;\r\n};\r\n\r\nexport type ConstantSerialization =\r\n    BaseSerialization<'Constant', ConstantConfig>;\r\n\r\nexport type RandomNormalConfig = {\r\n  mean?: number;\r\n  stddev?: number;\r\n  seed?: number;\r\n};\r\n\r\nexport type RandomNormalSerialization =\r\n    BaseSerialization<'RandomNormal', RandomNormalConfig>;\r\n\r\nexport type RandomUniformConfig = {\r\n  minval?: number;\r\n  maxval?: number;\r\n  seed?: number;\r\n};\r\n\r\nexport type RandomUniformSerialization =\r\n    BaseSerialization<'RandomUniform', RandomUniformConfig>;\r\n\r\nexport type TruncatedNormalConfig = {\r\n  mean?: number;\r\n  stddev?: number;\r\n  seed?: number;\r\n};\r\n\r\nexport type TruncatedNormalSerialization =\r\n    BaseSerialization<'TruncatedNormal', TruncatedNormalConfig>;\r\n\r\nexport type VarianceScalingConfig = {\r\n  scale?: number;\r\n\r\n  mode?: FanModeSerialization;\r\n  distribution?: DistributionSerialization;\r\n  seed?: number;\r\n};\r\n\r\nexport type VarianceScalingSerialization =\r\n    BaseSerialization<'VarianceScaling', VarianceScalingConfig>;\r\n\r\nexport type OrthogonalConfig = {\r\n  seed?: number;\r\n  gain?: number;\r\n};\r\n\r\nexport type OrthogonalSerialization =\r\n    BaseSerialization<'Orthogonal', OrthogonalConfig>;\r\n\r\nexport type IdentityConfig = {\r\n  gain?: number;\r\n};\r\n\r\nexport type IdentitySerialization =\r\n    BaseSerialization<'Identity', IdentityConfig>;\r\n\r\n// Update initializerClassNames below in concert with this.\r\nexport type InitializerSerialization = ZerosSerialization|OnesSerialization|\r\n    ConstantSerialization|RandomUniformSerialization|RandomNormalSerialization|\r\n    TruncatedNormalSerialization|IdentitySerialization|\r\n    VarianceScalingSerialization|OrthogonalSerialization;\r\n\r\nexport type InitializerClassName = InitializerSerialization['class_name'];\r\n\r\n// We can't easily extract a string[] from the string union type, but we can\r\n// recapitulate the list, enforcing at compile time that the values are valid\r\n// and that we have the right number of them.\r\n\r\n/**\r\n * A string array of valid Initializer class names.\r\n *\r\n * This is guaranteed to match the `InitializerClassName` union type.\r\n */\r\nexport const initializerClassNames: InitializerClassName[] = [\r\n  'Zeros', 'Ones', 'Constant', 'RandomNormal', 'RandomUniform',\r\n  'TruncatedNormal', 'VarianceScaling', 'Orthogonal', 'Identity'\r\n];\r\n"},"lineCount":null}},"error":null,"hash":"cef1f84025e537c416c4ebf876297613","cacheData":{"env":{}}}