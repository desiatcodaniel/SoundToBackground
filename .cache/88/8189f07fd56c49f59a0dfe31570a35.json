{"id":"node_modules/@tensorflow/tfjs-core/dist/ops/scatter_nd.js","dependencies":[{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\scatter_nd.js.map","includedInParent":true,"mtime":1618542803842},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\src\\ops\\scatter_nd.ts","includedInParent":true,"mtime":1618542804823},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\package.json","includedInParent":true,"mtime":1618542826354},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\package.json","includedInParent":true,"mtime":1618542804579},{"name":"../engine","loc":{"line":17,"column":23},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\scatter_nd.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\engine.js"},{"name":"../kernel_names","loc":{"line":18,"column":26},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\scatter_nd.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\kernel_names.js"},{"name":"../tensor_util_env","loc":{"line":19,"column":32},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\scatter_nd.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\tensor_util_env.js"},{"name":"./operation","loc":{"line":20,"column":19},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\scatter_nd.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\operation.js"},{"name":"./scatter_nd_util","loc":{"line":21,"column":33},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\scatter_nd.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\ops\\scatter_nd_util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scatterND = void 0;\n\nvar _engine = require(\"../engine\");\n\nvar _kernel_names = require(\"../kernel_names\");\n\nvar _tensor_util_env = require(\"../tensor_util_env\");\n\nvar _operation = require(\"./operation\");\n\nvar scatter_nd_util = _interopRequireWildcard(require(\"./scatter_nd_util\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n\n/**\r\n * Creates a new tensor by applying sparse updates to individual\r\n * values or slices within a zero tensor of the given shape tensor according to\r\n * indices. This operator is the inverse of the `tf.gatherND` operator which\r\n * extracts values or slices from a given tensor.\r\n *\r\n * ```js\r\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\r\n * const updates = tf.tensor1d([9, 10, 11, 12]);\r\n * const shape = [8];\r\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\r\n * ```\r\n *\r\n * @param indices The tensor contains the indices into the output tensor.\r\n * @param updates The tensor contains the value for the indices.\r\n * @param shape: The shape of the output tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\r\n */\nfunction scatterND_(indices, updates, shape) {\n  const $indices = (0, _tensor_util_env.convertToTensor)(indices, 'indices', 'scatterND', 'int32');\n  const $updates = (0, _tensor_util_env.convertToTensor)(updates, 'updates', 'scatterND');\n  scatter_nd_util.validateInput($updates, $indices, shape);\n  const inputs = {\n    indices: $indices,\n    updates: $updates\n  };\n  const attrs = {\n    shape\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return _engine.ENGINE.runKernel(_kernel_names.ScatterNd, inputs, attrs);\n}\n\nconst scatterND = (0, _operation.op)({\n  scatterND_\n});\nexports.scatterND = scatterND;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":12,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":14,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":27,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":22,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":29,"column":0},"generated":{"line":39,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":58,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":58,"column":9}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":58,"column":19}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":58,"column":20}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":58,"column":27}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":49,"column":32},"generated":{"line":58,"column":29}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":58,"column":36}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":58,"column":38}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":58,"column":43}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":58,"column":45}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":59,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":8},"generated":{"line":59,"column":8}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":59,"column":16}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":19},"generated":{"line":59,"column":19}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":35},"generated":{"line":59,"column":57}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":19},"generated":{"line":59,"column":64}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":44},"generated":{"line":59,"column":66}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":19},"generated":{"line":59,"column":75}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":55},"generated":{"line":59,"column":77}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":19},"generated":{"line":59,"column":88}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":68},"generated":{"line":59,"column":90}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":19},"generated":{"line":59,"column":97}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":51,"column":2},"generated":{"line":59,"column":98}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":60,"column":8}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":60,"column":16}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":60,"column":19}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":35},"generated":{"line":60,"column":57}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":60,"column":64}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":44},"generated":{"line":60,"column":66}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":60,"column":75}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":55},"generated":{"line":60,"column":77}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":60,"column":88}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":52,"column":2},"generated":{"line":60,"column":89}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":61,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":61,"column":2}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":17},"generated":{"line":61,"column":17}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":18},"generated":{"line":61,"column":18}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":61,"column":31}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":32},"generated":{"line":61,"column":32}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":61,"column":40}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":42},"generated":{"line":61,"column":42}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":61,"column":50}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":52},"generated":{"line":61,"column":52}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":53,"column":2},"generated":{"line":61,"column":57}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":62,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":62,"column":8}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":14},"generated":{"line":62,"column":14}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":62,"column":17}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":35},"generated":{"line":63,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":35},"generated":{"line":63,"column":4}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":42},"generated":{"line":63,"column":11}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":44},"generated":{"line":63,"column":13}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":63,"column":21}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":54},"generated":{"line":64,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":54},"generated":{"line":64,"column":4}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":61},"generated":{"line":64,"column":11}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":63},"generated":{"line":64,"column":13}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":34},"generated":{"line":65,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":65,"column":3}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":66,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":66,"column":8}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":13},"generated":{"line":66,"column":13}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":32},"generated":{"line":66,"column":16}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":33},"generated":{"line":67,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":33},"generated":{"line":67,"column":4}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":32},"generated":{"line":68,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":68,"column":3}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":50,"column":22},"generated":{"line":68,"column":4}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":68,"column":5}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":70,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":9},"generated":{"line":70,"column":9}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":16},"generated":{"line":70,"column":24}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":9},"generated":{"line":70,"column":33}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":60,"column":13},"generated":{"line":70,"column":34}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":9},"generated":{"line":70,"column":57}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":60,"column":24},"generated":{"line":70,"column":59}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":9},"generated":{"line":70,"column":65}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":61,"column":13},"generated":{"line":70,"column":67}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":9},"generated":{"line":70,"column":72}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":59,"column":2},"generated":{"line":70,"column":73}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":62,"column":1},"generated":{"line":71,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":7},"generated":{"line":73,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":13},"generated":{"line":73,"column":6}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":22},"generated":{"line":73,"column":15}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":25},"generated":{"line":73,"column":18}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":28},"generated":{"line":73,"column":37}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":29},"generated":{"line":74,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":29},"generated":{"line":74,"column":2}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":28},"generated":{"line":75,"column":0}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":25},"generated":{"line":75,"column":1}},{"source":"../../src/ops/scatter_nd.ts","name":null,"original":{"line":64,"column":7},"generated":{"line":75,"column":2}}],"sources":{"../../src/ops/scatter_nd.ts":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {ENGINE} from '../engine';\r\nimport {ScatterNd, ScatterNdAttrs, ScatterNdInputs} from '../kernel_names';\r\nimport {NamedAttrMap} from '../kernel_registry';\r\nimport {Tensor} from '../tensor';\r\nimport {NamedTensorMap} from '../tensor_types';\r\nimport {convertToTensor} from '../tensor_util_env';\r\nimport {Rank, ShapeMap, TensorLike} from '../types';\r\n\r\nimport {op} from './operation';\r\nimport * as scatter_nd_util from './scatter_nd_util';\r\n\r\n/**\r\n * Creates a new tensor by applying sparse updates to individual\r\n * values or slices within a zero tensor of the given shape tensor according to\r\n * indices. This operator is the inverse of the `tf.gatherND` operator which\r\n * extracts values or slices from a given tensor.\r\n *\r\n * ```js\r\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\r\n * const updates = tf.tensor1d([9, 10, 11, 12]);\r\n * const shape = [8];\r\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\r\n * ```\r\n *\r\n * @param indices The tensor contains the indices into the output tensor.\r\n * @param updates The tensor contains the value for the indices.\r\n * @param shape: The shape of the output tensor.\r\n *\r\n * @doc {heading: 'Operations', subheading: 'Slicing and Joining'}\r\n */\r\nfunction scatterND_<R extends Rank>(\r\n    indices: Tensor|TensorLike, updates: Tensor|TensorLike,\r\n    shape: ShapeMap[R]): Tensor<R> {\r\n  const $indices = convertToTensor(indices, 'indices', 'scatterND', 'int32');\r\n  const $updates = convertToTensor(updates, 'updates', 'scatterND');\r\n  scatter_nd_util.validateInput($updates, $indices, shape);\r\n\r\n  const inputs: ScatterNdInputs = {indices: $indices, updates: $updates};\r\n  const attrs: ScatterNdAttrs = {shape};\r\n\r\n  // tslint:disable-next-line: no-unnecessary-type-assertion\r\n  return ENGINE.runKernel(\r\n             ScatterNd, inputs as {} as NamedTensorMap,\r\n             attrs as {} as NamedAttrMap) as Tensor<R>;\r\n}\r\n\r\nexport const scatterND = op({scatterND_});\r\n"},"lineCount":null}},"error":null,"hash":"01725e4c2f890874d83d010dfb92fae9","cacheData":{"env":{}}}