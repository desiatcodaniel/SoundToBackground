{"id":"node_modules/@tensorflow/tfjs-layers/dist/exports_constraints.js","dependencies":[{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_constraints.js.map","includedInParent":true,"mtime":1618542805206},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\src\\exports_constraints.ts","includedInParent":true,"mtime":1618542805545},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\package.json","includedInParent":true,"mtime":1618542826354},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\package.json","includedInParent":true,"mtime":1618542805530},{"name":"./constraints","loc":{"line":11,"column":54},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\dist\\exports_constraints.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-layers\\dist\\constraints.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.maxNorm = maxNorm;\nexports.unitNorm = unitNorm;\nexports.nonNeg = nonNeg;\nexports.minMaxNorm = minMaxNorm;\n\nvar _constraints = require(\"./constraints\");\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\n// tslint:disable-next-line:max-line-length\n\n/**\r\n * MaxNorm weight constraint.\r\n *\r\n * Constrains the weights incident to each hidden unit\r\n * to have a norm less than or equal to a desired value.\r\n *\r\n * References\r\n *       - [Dropout: A Simple Way to Prevent Neural Networks from Overfitting\r\n * Srivastava, Hinton, et al.\r\n * 2014](http://www.cs.toronto.edu/~rsalakhu/papers/srivastava14a.pdf)\r\n *\r\n * @doc {heading: 'Constraints',namespace: 'constraints'}\r\n */\nfunction maxNorm(args) {\n  return new _constraints.MaxNorm(args);\n}\n/**\r\n * Constrains the weights incident to each hidden unit to have unit norm.\r\n *\r\n * @doc {heading: 'Constraints', namespace: 'constraints'}\r\n */\n\n\nfunction unitNorm(args) {\n  return new _constraints.UnitNorm(args);\n}\n/**\r\n * Constains the weight to be non-negative.\r\n *\r\n * @doc {heading: 'Constraints', namespace: 'constraints'}\r\n */\n\n\nfunction nonNeg() {\n  return new _constraints.NonNeg();\n}\n/** @doc {heading: 'Constraints', namespace: 'constraints'} */\n\n\nfunction minMaxNorm(config) {\n  return new _constraints.MinMaxNorm(config);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../src/exports_constraints.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":13,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":22,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":13,"column":0},"generated":{"line":24,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":37,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":37,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":37,"column":16}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":26,"column":24},"generated":{"line":37,"column":17}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":26,"column":6},"generated":{"line":37,"column":21}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":26,"column":41},"generated":{"line":37,"column":23}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":38,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":38,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":27,"column":13},"generated":{"line":38,"column":13}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":38,"column":33}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":27,"column":21},"generated":{"line":38,"column":34}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":38,"column":38}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":38,"column":39}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":28,"column":1},"generated":{"line":39,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":40,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":47,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":35,"column":16},"generated":{"line":47,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":47,"column":17}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":35,"column":25},"generated":{"line":47,"column":18}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":47,"column":22}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":35,"column":43},"generated":{"line":47,"column":24}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":48,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":48,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":36,"column":13},"generated":{"line":48,"column":13}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":48,"column":34}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":36,"column":22},"generated":{"line":48,"column":35}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":36,"column":9},"generated":{"line":48,"column":39}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":48,"column":40}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":37,"column":1},"generated":{"line":49,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":39,"column":0},"generated":{"line":50,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":57,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":44,"column":16},"generated":{"line":57,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":57,"column":15}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":44,"column":22},"generated":{"line":57,"column":18}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":58,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":58,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":45,"column":13},"generated":{"line":58,"column":13}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":45,"column":9},"generated":{"line":58,"column":32}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":58,"column":34}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":46,"column":1},"generated":{"line":59,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":48,"column":0},"generated":{"line":60,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":63,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":63,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":63,"column":19}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":49,"column":27},"generated":{"line":63,"column":20}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":49,"column":6},"generated":{"line":63,"column":26}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":49,"column":49},"generated":{"line":63,"column":28}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":64,"column":0}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":64,"column":9}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":50,"column":13},"generated":{"line":64,"column":13}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":64,"column":36}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":50,"column":24},"generated":{"line":64,"column":37}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":64,"column":43}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":64,"column":44}},{"source":"../src/exports_constraints.ts","name":null,"original":{"line":51,"column":1},"generated":{"line":65,"column":0}}],"sources":{"../src/exports_constraints.ts":"/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Use of this source code is governed by an MIT-style\r\n * license that can be found in the LICENSE file or at\r\n * https://opensource.org/licenses/MIT.\r\n * =============================================================================\r\n */\r\n// tslint:disable-next-line:max-line-length\r\nimport {Constraint, MaxNorm, MaxNormArgs, MinMaxNorm, MinMaxNormArgs, NonNeg, UnitNorm, UnitNormArgs} from './constraints';\r\n\r\n/**\r\n * MaxNorm weight constraint.\r\n *\r\n * Constrains the weights incident to each hidden unit\r\n * to have a norm less than or equal to a desired value.\r\n *\r\n * References\r\n *       - [Dropout: A Simple Way to Prevent Neural Networks from Overfitting\r\n * Srivastava, Hinton, et al.\r\n * 2014](http://www.cs.toronto.edu/~rsalakhu/papers/srivastava14a.pdf)\r\n *\r\n * @doc {heading: 'Constraints',namespace: 'constraints'}\r\n */\r\nexport function maxNorm(args: MaxNormArgs): Constraint {\r\n  return new MaxNorm(args);\r\n}\r\n\r\n/**\r\n * Constrains the weights incident to each hidden unit to have unit norm.\r\n *\r\n * @doc {heading: 'Constraints', namespace: 'constraints'}\r\n */\r\nexport function unitNorm(args: UnitNormArgs): Constraint {\r\n  return new UnitNorm(args);\r\n}\r\n\r\n/**\r\n * Constains the weight to be non-negative.\r\n *\r\n * @doc {heading: 'Constraints', namespace: 'constraints'}\r\n */\r\nexport function nonNeg(): Constraint {\r\n  return new NonNeg();\r\n}\r\n\r\n/** @doc {heading: 'Constraints', namespace: 'constraints'} */\r\nexport function minMaxNorm(config: MinMaxNormArgs): Constraint {\r\n  return new MinMaxNorm(config);\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"4f756f3279af838a25ba09818597342b","cacheData":{"env":{}}}