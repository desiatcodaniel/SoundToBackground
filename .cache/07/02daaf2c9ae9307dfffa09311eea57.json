{"id":"node_modules/@tensorflow/tfjs-data/dist/datasource.js","dependencies":[{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-data\\dist\\datasource.js.map","includedInParent":true,"mtime":1618542804981},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-data\\src\\datasource.ts","includedInParent":true,"mtime":1618542805125},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\package.json","includedInParent":true,"mtime":1618542826354},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-data\\package.json","includedInParent":true,"mtime":1618542805121}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataSource = void 0;\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * =============================================================================\r\n */\n\n/**\r\n * Represents a data source readable as a stream of binary data chunks.\r\n *\r\n * Because `Dataset`s can be read repeatedly (via `Dataset.iterator()`), this\r\n * provides a means to repeatedly create streams from the underlying data\r\n * sources.\r\n */\nclass DataSource {} // TODO(soergel): consider convenience factory functions here\n// in combination with chainable source->dataset above, e.g.:\n// tf.data.url(...).asCsvDataset().shuffle().batch()\n\n\nexports.DataSource = DataSource;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/datasource.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":21,"column":0},"generated":{"line":26,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":33,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":33,"column":6}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":33,"column":16}},{"source":"../src/datasource.ts","name":null,"original":{"line":28,"column":32},"generated":{"line":33,"column":17}},{"source":"../src/datasource.ts","name":null,"original":{"line":40,"column":0},"generated":{"line":33,"column":20}},{"source":"../src/datasource.ts","name":null,"original":{"line":41,"column":0},"generated":{"line":34,"column":0}},{"source":"../src/datasource.ts","name":null,"original":{"line":42,"column":0},"generated":{"line":35,"column":0}}],"sources":{"../src/datasource.ts":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n *\r\n * =============================================================================\r\n */\r\n\r\nimport {ByteChunkIterator} from './iterators/byte_chunk_iterator';\r\n\r\n/**\r\n * Represents a data source readable as a stream of binary data chunks.\r\n *\r\n * Because `Dataset`s can be read repeatedly (via `Dataset.iterator()`), this\r\n * provides a means to repeatedly create streams from the underlying data\r\n * sources.\r\n */\r\nexport abstract class DataSource {\r\n  /**\r\n   * Obtain a new stream of binary data chunks.\r\n   *\r\n   * Starts the new stream from the beginning of the data source, even if other\r\n   * streams have been obtained previously.\r\n   */\r\n  abstract async iterator(): Promise<ByteChunkIterator>;\r\n\r\n  // TODO(soergel): consider chainable Dataset construction here\r\n}\r\n\r\n// TODO(soergel): consider convenience factory functions here\r\n// in combination with chainable source->dataset above, e.g.:\r\n// tf.data.url(...).asCsvDataset().shuffle().batch()\r\n"},"lineCount":null}},"error":null,"hash":"f26ed2859c86b34ece35594ad93c6a07","cacheData":{"env":{}}}