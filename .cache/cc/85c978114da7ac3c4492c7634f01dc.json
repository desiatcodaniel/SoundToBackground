{"id":"node_modules/@tensorflow/tfjs-backend-webgl/dist/encode_matrix_packed_gpu.js","dependencies":[{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\encode_matrix_packed_gpu.js.map","includedInParent":true,"mtime":1618542801730},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\encode_matrix_packed_gpu.ts","includedInParent":true,"mtime":1618542802375},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\package.json","includedInParent":true,"mtime":1618542826354},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1618542802353},{"name":"./glsl_version","loc":{"line":17,"column":35},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\encode_matrix_packed_gpu.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\glsl_version.js"},{"name":"./shader_compiler_util","loc":{"line":18,"column":29},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\encode_matrix_packed_gpu.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\shader_compiler_util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EncodeMatrixPackedProgram = void 0;\n\nvar _glsl_version = require(\"./glsl_version\");\n\nvar shader_util = _interopRequireWildcard(require(\"./shader_compiler_util\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\n\n/*\r\nThis is how the shader encodes a tensor with shape = [2, 3, 5]\r\n(indices are [batch, row, col]).\r\n\r\n000|001   002|003   004|xxx   020|021   022|023   024|xxx\r\n-------   -------   -------   -------   -------   -------\r\n010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\r\n\r\n100|101   102|103   104|xxx   120|121   122|123   124|xxx\r\n-------   -------   -------   -------   -------   -------\r\n110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\r\n\r\nSingle texels contain only values from the same batch, and from adjacent rows\r\nand columns.\r\n */\nclass EncodeMatrixPackedProgram {\n  constructor(outputShape, texShape, inputIsUnsignedByte = false) {\n    this.variableNames = ['A'];\n    this.packedInputs = false;\n    this.packedOutput = true;\n    const glsl = (0, _glsl_version.getGlslDifferences)();\n    const [height, width] = texShape;\n    this.outputShape = outputShape;\n    let mainLoop = '';\n    let output = 'result';\n\n    if (inputIsUnsignedByte) {\n      output = 'floor(result * 255. + 0.5)';\n    }\n\n    for (let row = 0; row <= 1; row++) {\n      for (let col = 0; col <= 1; col++) {\n        const channel = row * 2 + col;\n        mainLoop += `\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${outputShape[2]}) {\n            localCoords[2] += ${col};\n            if(localCoords[1] + ${row} < ${outputShape[1]}) {\n              localCoords[1] += ${row};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${width};\n              c = imod(flatIndex, ${width});\n              uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n              values = ${glsl.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${channel}] = values[0];\n              } else if(offset == 1) {\n                result[${channel}] = values[1];\n              } else if(offset == 2) {\n                result[${channel}] = values[2];\n              } else {\n                result[${channel}] = values[3];\n              }\n            }\n          }\n        `;\n      }\n    }\n\n    this.userCode = `\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${mainLoop}\n\n        ${glsl.output} = ${output};\n      }\n    `;\n  }\n\n}\n\nexports.EncodeMatrixPackedProgram = EncodeMatrixPackedProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":20,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":33,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":48,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":48,"column":6}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":48,"column":31}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":38,"column":38},"generated":{"line":48,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":49,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":49,"column":2}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":49,"column":13}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":49,"column":14}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":49,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":46,"column":45},"generated":{"line":49,"column":27}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":49,"column":35}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":49,"column":37}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":47,"column":25},"generated":{"line":49,"column":56}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":47,"column":28},"generated":{"line":49,"column":59}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":45,"column":2},"generated":{"line":49,"column":64}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":47,"column":33},"generated":{"line":49,"column":66}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":50,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":50,"column":9}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":50,"column":22}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":39,"column":18},"generated":{"line":50,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":39,"column":19},"generated":{"line":50,"column":26}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":39,"column":18},"generated":{"line":50,"column":29}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":39,"column":2},"generated":{"line":50,"column":30}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":51,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":51,"column":9}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":51,"column":21}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":42,"column":17},"generated":{"line":51,"column":24}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":42,"column":2},"generated":{"line":51,"column":29}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":52,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":52,"column":9}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":52,"column":21}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":43,"column":17},"generated":{"line":52,"column":24}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":43,"column":2},"generated":{"line":52,"column":28}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":53,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":48,"column":10},"generated":{"line":53,"column":10}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":48,"column":14},"generated":{"line":53,"column":14}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":48,"column":17},"generated":{"line":53,"column":17}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":53,"column":56}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":54,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":54,"column":10}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":11},"generated":{"line":54,"column":11}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":54,"column":17}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":19},"generated":{"line":54,"column":19}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":10},"generated":{"line":54,"column":24}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":28},"generated":{"line":54,"column":28}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":54,"column":36}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":55,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":50,"column":9},"generated":{"line":55,"column":9}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":55,"column":20}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":50,"column":23},"generated":{"line":55,"column":23}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":55,"column":34}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":56,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":56,"column":8}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":56,"column":16}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":52,"column":19},"generated":{"line":56,"column":19}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":56,"column":21}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":57,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":57,"column":8}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":53,"column":14},"generated":{"line":57,"column":14}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":53,"column":17},"generated":{"line":57,"column":17}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":53,"column":4},"generated":{"line":57,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":59,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":59,"column":8}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":54,"column":4},"generated":{"line":59,"column":27}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":59,"column":29}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":60,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":60,"column":6}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":55,"column":12},"generated":{"line":60,"column":12}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":60,"column":15}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":60,"column":43}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":56,"column":5},"generated":{"line":61,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":63,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":63,"column":9}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":13},"generated":{"line":63,"column":13}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":16},"generated":{"line":63,"column":16}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":19},"generated":{"line":63,"column":19}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":63,"column":20}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":22},"generated":{"line":63,"column":22}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":25},"generated":{"line":63,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":29},"generated":{"line":63,"column":29}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":63,"column":30}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":32},"generated":{"line":63,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":35},"generated":{"line":63,"column":35}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":63,"column":37}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":58,"column":39},"generated":{"line":63,"column":39}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":64,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":11},"generated":{"line":64,"column":11}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":15},"generated":{"line":64,"column":15}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":18},"generated":{"line":64,"column":18}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":21},"generated":{"line":64,"column":21}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":64,"column":22}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":24},"generated":{"line":64,"column":24}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":27},"generated":{"line":64,"column":27}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":31},"generated":{"line":64,"column":31}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":64,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":34},"generated":{"line":64,"column":34}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":37},"generated":{"line":64,"column":37}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":64,"column":39}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":59,"column":41},"generated":{"line":64,"column":41}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":8},"generated":{"line":65,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":14},"generated":{"line":65,"column":14}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":65,"column":21}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":24},"generated":{"line":65,"column":24}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":27},"generated":{"line":65,"column":27}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":30},"generated":{"line":65,"column":30}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":24},"generated":{"line":65,"column":31}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":34},"generated":{"line":65,"column":34}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":60,"column":8},"generated":{"line":65,"column":37}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":66,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":66,"column":8}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":62,"column":16},"generated":{"line":66,"column":16}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":62,"column":20},"generated":{"line":66,"column":20}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":64,"column":32},"generated":{"line":68,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":64,"column":35},"generated":{"line":68,"column":35}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":64,"column":41},"generated":{"line":68,"column":41}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":64,"column":52},"generated":{"line":68,"column":52}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":64,"column":53},"generated":{"line":68,"column":53}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":64,"column":52},"generated":{"line":68,"column":54}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":64,"column":55},"generated":{"line":68,"column":55}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":65,"column":32},"generated":{"line":69,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":65,"column":35},"generated":{"line":69,"column":35}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":66,"column":34},"generated":{"line":70,"column":34}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":66,"column":37},"generated":{"line":70,"column":37}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":66,"column":43},"generated":{"line":70,"column":43}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":66,"column":54},"generated":{"line":70,"column":54}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":66,"column":55},"generated":{"line":70,"column":55}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":66,"column":54},"generated":{"line":70,"column":56}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":66,"column":57},"generated":{"line":70,"column":57}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":67,"column":34},"generated":{"line":71,"column":34}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":67,"column":37},"generated":{"line":71,"column":37}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":74,"column":32},"generated":{"line":78,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":74,"column":37},"generated":{"line":78,"column":37}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":75,"column":36},"generated":{"line":79,"column":36}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":75,"column":41},"generated":{"line":79,"column":41}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":76,"column":50},"generated":{"line":80,"column":50}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":76,"column":55},"generated":{"line":80,"column":55}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":76,"column":62},"generated":{"line":80,"column":62}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":76,"column":68},"generated":{"line":80,"column":68}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":77,"column":25},"generated":{"line":81,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":77,"column":29},"generated":{"line":81,"column":29}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":77,"column":30},"generated":{"line":81,"column":30}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":77,"column":39},"generated":{"line":81,"column":39}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":80,"column":25},"generated":{"line":84,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":80,"column":32},"generated":{"line":84,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":82,"column":25},"generated":{"line":86,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":82,"column":32},"generated":{"line":86,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":84,"column":25},"generated":{"line":88,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":84,"column":32},"generated":{"line":88,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":86,"column":25},"generated":{"line":90,"column":25}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":86,"column":32},"generated":{"line":90,"column":32}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":94,"column":9}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":91,"column":7},"generated":{"line":95,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":92,"column":5},"generated":{"line":96,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":98,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":94,"column":9},"generated":{"line":98,"column":9}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":98,"column":17}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":94,"column":20},"generated":{"line":98,"column":20}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":99,"column":8}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":95,"column":19},"generated":{"line":99,"column":19}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":95,"column":20},"generated":{"line":99,"column":20}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":99,"column":38}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":95,"column":39},"generated":{"line":99,"column":39}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":95,"column":8},"generated":{"line":99,"column":50}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":95,"column":51},"generated":{"line":99,"column":51}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":106,"column":10},"generated":{"line":110,"column":10}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":106,"column":18},"generated":{"line":110,"column":18}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":108,"column":10},"generated":{"line":112,"column":10}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":108,"column":14},"generated":{"line":112,"column":14}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":108,"column":15},"generated":{"line":112,"column":15}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":108,"column":21},"generated":{"line":112,"column":21}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":108,"column":27},"generated":{"line":112,"column":27}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":108,"column":33},"generated":{"line":112,"column":33}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":94,"column":4},"generated":{"line":114,"column":5}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":111,"column":3},"generated":{"line":115,"column":0}},{"source":"../src/encode_matrix_packed_gpu.ts","name":null,"original":{"line":38,"column":38},"generated":{"line":117,"column":0}}],"sources":{"../src/encode_matrix_packed_gpu.ts":"/**\r\n * @license\r\n * Copyright 2018 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {getGlslDifferences} from './glsl_version';\r\nimport {GPGPUProgram} from './gpgpu_math';\r\nimport * as shader_util from './shader_compiler_util';\r\n\r\n/*\r\nThis is how the shader encodes a tensor with shape = [2, 3, 5]\r\n(indices are [batch, row, col]).\r\n\r\n000|001   002|003   004|xxx   020|021   022|023   024|xxx\r\n-------   -------   -------   -------   -------   -------\r\n010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\r\n\r\n100|101   102|103   104|xxx   120|121   122|123   124|xxx\r\n-------   -------   -------   -------   -------   -------\r\n110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\r\n\r\nSingle texels contain only values from the same batch, and from adjacent rows\r\nand columns.\r\n */\r\n\r\nexport class EncodeMatrixPackedProgram implements GPGPUProgram {\r\n  variableNames = ['A'];\r\n  userCode: string;\r\n  outputShape: number[];\r\n  packedInputs = false;\r\n  packedOutput = true;\r\n\r\n  constructor(\r\n      outputShape: [number, number, number], texShape: [number, number],\r\n      inputIsUnsignedByte = false) {\r\n    const glsl = getGlslDifferences();\r\n    const [height, width] = texShape;\r\n    this.outputShape = outputShape;\r\n\r\n    let mainLoop = '';\r\n    let output = 'result';\r\n    if (inputIsUnsignedByte) {\r\n      output = 'floor(result * 255. + 0.5)';\r\n    }\r\n\r\n    for (let row = 0; row <= 1; row++) {\r\n      for (let col = 0; col <= 1; col++) {\r\n        const channel = row * 2 + col;\r\n\r\n        mainLoop += `\r\n          localCoords = coords;\r\n          if(localCoords[2] + ${col} < ${outputShape[2]}) {\r\n            localCoords[2] += ${col};\r\n            if(localCoords[1] + ${row} < ${outputShape[1]}) {\r\n              localCoords[1] += ${row};\r\n\r\n              flatIndex = getFlatIndex(localCoords);\r\n              offset = imod(flatIndex, 4);\r\n\r\n              flatIndex = idiv(flatIndex, 4, 1.);\r\n\r\n              r = flatIndex / ${width};\r\n              c = imod(flatIndex, ${width});\r\n              uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\r\n              values = ${glsl.texture2D}(A, uv);\r\n\r\n              if(offset == 0) {\r\n                result[${channel}] = values[0];\r\n              } else if(offset == 1) {\r\n                result[${channel}] = values[1];\r\n              } else if(offset == 2) {\r\n                result[${channel}] = values[2];\r\n              } else {\r\n                result[${channel}] = values[3];\r\n              }\r\n            }\r\n          }\r\n        `;\r\n      }\r\n    }\r\n\r\n    this.userCode = `\r\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\r\n\r\n      void main() {\r\n        ivec3 coords = getOutputCoords();\r\n\r\n        vec4 result = vec4(0.);\r\n        int flatIndex, r, c, offset;\r\n        ivec3 localCoords;\r\n        vec2 uv;\r\n        vec4 values;\r\n\r\n        ${mainLoop}\r\n\r\n        ${glsl.output} = ${output};\r\n      }\r\n    `;\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"83e27805a985725728e3b36643d20c21","cacheData":{"env":{}}}