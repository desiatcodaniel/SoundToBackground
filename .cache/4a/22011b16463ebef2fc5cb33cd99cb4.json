{"id":"node_modules/@tensorflow/tfjs-backend-webgl/dist/batchnorm_gpu.js","dependencies":[{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\batchnorm_gpu.js.map","includedInParent":true,"mtime":1618542801683},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\src\\batchnorm_gpu.ts","includedInParent":true,"mtime":1618542802359},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\package.json","includedInParent":true,"mtime":1618542826354},{"name":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\package.json","includedInParent":true,"mtime":1618542802353},{"name":"@tensorflow/tfjs-core","loc":{"line":17,"column":29},"parent":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-backend-webgl\\dist\\batchnorm_gpu.js","resolved":"C:\\Users\\Daniel\\Documents\\SoundToBackground\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BatchNormProgram = void 0;\n\nvar _tfjsCore = require(\"@tensorflow/tfjs-core\");\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\nclass BatchNormProgram {\n  constructor(xShape, meanShape, varianceShape, offsetShape, scaleShape, varianceEpsilon) {\n    this.outputShape = [];\n    this.variableNames = ['x', 'mean', 'variance'];\n\n    _tfjsCore.backend_util.assertAndGetBroadcastShape(xShape, meanShape);\n\n    _tfjsCore.backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\n\n    let offsetSnippet = '0.0';\n\n    if (offsetShape != null) {\n      _tfjsCore.backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\n\n      this.variableNames.push('offset');\n      offsetSnippet = 'getOffsetAtOutCoords()';\n    }\n\n    let scaleSnippet = '1.0';\n\n    if (scaleShape != null) {\n      _tfjsCore.backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\n\n      this.variableNames.push('scale');\n      scaleSnippet = 'getScaleAtOutCoords()';\n    }\n\n    this.outputShape = xShape;\n    this.userCode = `\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${offsetSnippet};\n        float scale = ${scaleSnippet};\n        float inv = scale * inversesqrt(variance + float(${varianceEpsilon}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `;\n  }\n\n}\n\nexports.BatchNormProgram = BatchNormProgram;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":18,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":26,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":26,"column":6}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":6},"generated":{"line":26,"column":22}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":26,"column":23}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":2}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":13}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":27,"column":6},"generated":{"line":27,"column":14}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":20}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":27,"column":24},"generated":{"line":27,"column":22}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":31}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":27,"column":45},"generated":{"line":27,"column":33}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":46}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":28,"column":6},"generated":{"line":27,"column":48}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":59}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":28,"column":34},"generated":{"line":27,"column":61}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":71}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":27,"column":73}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":27,"column":88}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":29,"column":29},"generated":{"line":27,"column":90}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":28,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":28,"column":9}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":28,"column":20}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":26},"generated":{"line":28,"column":23}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":28,"column":25}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":29,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":9},"generated":{"line":29,"column":9}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":29,"column":22}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":29,"column":25}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":29,"column":26}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":29,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":31},"generated":{"line":29,"column":31}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":29,"column":37}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":39},"generated":{"line":29,"column":39}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":25},"generated":{"line":29,"column":49}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":30,"column":4},"generated":{"line":29,"column":50}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":31,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":17},"generated":{"line":31,"column":27}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":31,"column":53}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":44},"generated":{"line":31,"column":54}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":31,"column":60}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":52},"generated":{"line":31,"column":62}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":31,"column":4},"generated":{"line":31,"column":71}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":33,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":17},"generated":{"line":33,"column":27}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":33,"column":53}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":44},"generated":{"line":33,"column":54}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":33,"column":60}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":52},"generated":{"line":33,"column":62}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":33,"column":75}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":35,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":8},"generated":{"line":35,"column":8}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":21},"generated":{"line":35,"column":21}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":24},"generated":{"line":35,"column":24}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":35,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":37,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":8},"generated":{"line":37,"column":8}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":19},"generated":{"line":37,"column":19}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":23},"generated":{"line":37,"column":23}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":4},"generated":{"line":37,"column":27}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":35,"column":29},"generated":{"line":37,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":38,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":19},"generated":{"line":38,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":38,"column":55}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":46},"generated":{"line":38,"column":56}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":38,"column":62}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":54},"generated":{"line":38,"column":64}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":36,"column":6},"generated":{"line":38,"column":75}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":40,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":11},"generated":{"line":40,"column":11}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":40,"column":24}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":25},"generated":{"line":40,"column":25}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":40,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":30},"generated":{"line":40,"column":30}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":40,"column":38}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":41,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":41,"column":6}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":38,"column":19},"generated":{"line":41,"column":19}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":38,"column":22},"generated":{"line":41,"column":22}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":38,"column":6},"generated":{"line":41,"column":46}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":39,"column":5},"generated":{"line":42,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":44,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":44,"column":8}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":20},"generated":{"line":44,"column":20}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":23},"generated":{"line":44,"column":23}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":41,"column":4},"generated":{"line":44,"column":28}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":46,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":8},"generated":{"line":46,"column":8}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":18},"generated":{"line":46,"column":18}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":22},"generated":{"line":46,"column":22}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":46,"column":26}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":42,"column":28},"generated":{"line":46,"column":28}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":47,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":19},"generated":{"line":47,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":47,"column":55}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":46},"generated":{"line":47,"column":56}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":47,"column":62}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":54},"generated":{"line":47,"column":64}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":43,"column":6},"generated":{"line":47,"column":74}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":49,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":11},"generated":{"line":49,"column":11}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":49,"column":24}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":25},"generated":{"line":49,"column":25}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":49,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":30},"generated":{"line":49,"column":30}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":44,"column":6},"generated":{"line":49,"column":37}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":50,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":50,"column":6}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":45,"column":18},"generated":{"line":50,"column":18}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":45,"column":21},"generated":{"line":50,"column":21}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":45,"column":6},"generated":{"line":50,"column":44}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":46,"column":5},"generated":{"line":51,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":53,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":9},"generated":{"line":53,"column":9}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":53,"column":20}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":23},"generated":{"line":53,"column":23}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":53,"column":29}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":54,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":49,"column":9},"generated":{"line":54,"column":9}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":54,"column":17}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":49,"column":20},"generated":{"line":54,"column":20}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":54,"column":25},"generated":{"line":59,"column":25}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":54,"column":38},"generated":{"line":59,"column":38}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":55,"column":24},"generated":{"line":60,"column":24}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":55,"column":36},"generated":{"line":60,"column":36}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":56,"column":59},"generated":{"line":61,"column":59}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":56,"column":74},"generated":{"line":61,"column":74}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":64,"column":5}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":60,"column":3},"generated":{"line":65,"column":0}},{"source":"../src/batchnorm_gpu.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":67,"column":0}}],"sources":{"../src/batchnorm_gpu.ts":"/**\r\n * @license\r\n * Copyright 2017 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {backend_util} from '@tensorflow/tfjs-core';\r\nimport {GPGPUProgram} from './gpgpu_math';\r\n\r\nexport class BatchNormProgram implements GPGPUProgram {\r\n  variableNames: string[];\r\n  outputShape: number[] = [];\r\n  userCode: string;\r\n\r\n  constructor(\r\n      xShape: number[], meanShape: number[], varianceShape: number[],\r\n      offsetShape: number[]|null, scaleShape: number[]|null,\r\n      varianceEpsilon: number) {\r\n    this.variableNames = ['x', 'mean', 'variance'];\r\n    backend_util.assertAndGetBroadcastShape(xShape, meanShape);\r\n    backend_util.assertAndGetBroadcastShape(xShape, varianceShape);\r\n\r\n    let offsetSnippet = '0.0';\r\n    if (offsetShape != null) {\r\n      backend_util.assertAndGetBroadcastShape(xShape, offsetShape);\r\n      this.variableNames.push('offset');\r\n      offsetSnippet = 'getOffsetAtOutCoords()';\r\n    }\r\n\r\n    let scaleSnippet = '1.0';\r\n    if (scaleShape != null) {\r\n      backend_util.assertAndGetBroadcastShape(xShape, scaleShape);\r\n      this.variableNames.push('scale');\r\n      scaleSnippet = 'getScaleAtOutCoords()';\r\n    }\r\n\r\n    this.outputShape = xShape;\r\n    this.userCode = `\r\n      void main() {\r\n        float x = getXAtOutCoords();\r\n        float mean = getMeanAtOutCoords();\r\n        float variance = getVarianceAtOutCoords();\r\n        float offset = ${offsetSnippet};\r\n        float scale = ${scaleSnippet};\r\n        float inv = scale * inversesqrt(variance + float(${varianceEpsilon}));\r\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\r\n      }\r\n    `;\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"990681f0cd98fb4d882cd5050cb675df","cacheData":{"env":{}}}